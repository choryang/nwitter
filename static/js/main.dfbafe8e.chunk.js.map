{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","orderBy","get","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfbafe8e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const firebaseInstance = firebase;\r\n\r\n  export const authService = firebase.auth();\r\n\r\n  export const dbService = firebase.firestore();\r\n\r\n  export const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        //creacte account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        //log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  \r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n            <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            />\r\n            <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            />\r\n            <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"} />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount}  className=\"authSwitch\">\r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n      </>\r\n    );\r\n\r\n}\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if(name === \"google\"){\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }\r\n    else if(name === \"github\"){\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n          </button>\r\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n          </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth; // 자동으로 import 가능","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok){\r\n            //delete nweet\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewNweet(value)\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                <>\r\n                    {isOwner && \r\n                    <>\r\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                            <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required autoFocus onChange={onChange} className=\"formInput\"/>\r\n                            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                        </form>\r\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                            Cancel\r\n                        </span>\r\n                    </>}\r\n                </>\r\n                ) :\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner && (\r\n                    <div class=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                  </div>\r\n                    )}\r\n                </>\r\n\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nweet;","import React, { useState } from \"react\"\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n          }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\") { //사진이 있는 경우\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n            \r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value}\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0]\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result }\r\n            } = finishedEvent;\r\n\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                className=\"factoryInput__input\"\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input  \r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }} />\r\n            \r\n            {attachment && \r\n                 <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                    src={attachment}\r\n                    style={{\r\n                        backgroundImage: attachment,\r\n                    }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n   \r\n    const [nweets, setNweets] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n              id: doc.id,\r\n              ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n            \r\n          });\r\n    }, []);\r\n    \r\n    return (\r\n        <div  className=\"container\">\r\n            <NweetFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map(nweet => \r\n                    <Nweet \r\n                        key={nweet.id} \r\n                        nweetObj={nweet} \r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n        \r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value}\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService\r\n        .collection(\"nweets\")\r\n        .where(\"creatorId\", \"==\" , userObj.uid )\r\n        .orderBy(\"createdAt\")\r\n        .get();\r\n\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n\r\n    }\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, [])\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName}className=\"formInput\"/>\r\n                <input\r\n                type=\"submit\"\r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"\r\n                style={{\r\n                    marginTop: 10,\r\n                }} />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\nexport default Profile;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => <nav>\r\n    <ul  style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n            to=\"/profile\"\r\n            style={{\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                fontSize: 12,\r\n            }}\r\n            >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n                {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}/>}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n          style={{\r\n            maxWidth: 890,\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            marginTop: 80,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj}/>\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  //const auth = fbase.auth(); 많이 호출할 예정이면 fbase.js에서 export\n\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n      } else {\n        setUserObj(null)\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user =  authService.currentUser;\n    setUserObj({ \n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  }\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing...\"}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport firebase from \"firebase\";\nimport \"./styles.css\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}